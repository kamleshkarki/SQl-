create database Demo
use demo

select * from Test1
insert into Test1 values('1001','APPLE','100','TRUE')
insert into Test1 values ('1002','ORANGE','501','FALSE')

create table test2(Order_Id varchar(255), OrderDate varchar(255), OrderTime varchar(255),City varchar(255),Contact_Number varchar(50)  primary key (order_Id))

alter table test2 alter column Order_Id varchar(255)

select * from test2
insert into Test2 values('C1002','25-8-2018','10:15','Delhi','9445858685')
alter table Test2 alter Column date varchar(255)
select * from test2
alter table test1 add Order_Id varchar(255)
ALTER TABLE Customers ADD Email varchar(255);

alter table test2 alter column Order_Id primary key


select * from test1
alter table test2 add primary key(Order_Id)
insert into Test1 values ('1002','ORANGE','501','FALSE')

update test1 set Order_id='C1002' where id='1002'
update Test1 set Available='FALSE' where Amount= '100'
ALTER TABLE Customers ADD Email varchar(255);
alter table Test1$ alter column Available varchar(255)

alter table test2
drop constraint PK__test2__F1E4607B5AF0D0FC

use CRMInquery
select * from Crm_comment2019_2020

select * from test1
select * from test2
select * from Addresss
select * from Order_detail

insert into Addresss values ('C1002','9445858685','Delhi','122001')
update Addresss set Order_id='C1001' where City= 'Pune'
create table Addresss(Order_id varchar(255), Contact_number varchar(255), city varchar(255), pincode varchar(255))

alter table test1 drop column id


select * into Order_detail from(select distinct t1.Order_id,t1.Food,t1.Amount,t1.Available,t2.Orderdate,t2.orderTime,t2.City,t2.Contact_Number
from(select * from test1)t1 left join
(select * from test2)t2
on t1.order_id=t2.Order_Id)z

CREATE VIEW [Products Above Average Price] AS SELECT ProductName, Price FROM Products WHERE Price > (SELECT AVG(Price) FROM Products);

create view Display as select Amount, Food,Order_Id from test1 where amount <=100(select amount from test1)
select * from [Display]




--New Data base handle 2017_2020 data
create database CCInquery_2017_2020
use CCInquery2017_2020
--year Inquery 2019-2020
select * from ResultInquiry2019_2020
--Year End
--year Crm comment 2019-2020
select * from Crm_comment2019_2020
--Year End
--year start
--year Inquery 2018-2019
select * from ResultInquiry2018_2019
--year Crm comment 2018-2019
select * from ResultCrm2018_2019
--year End




-- Backup the CRMInquery database using the date time stamp
DECLARE @BackupName VARCHAR(100)
SET @BackupName=CONCAT('D:\2020\Data_backup-',FORMAT(GETDATE(),'yyyy-MM-dd-hh-mm-tt'),'.bak')
BACKUP DATABASE CRMInquery TO DISK=@BackupName WITH COMPRESSION, INIT;
GO

-- Backup the CRMInquery database using the date time stamp
DECLARE @BackupName VARCHAR(300)
SET @BackupName=CONCAT('D:\2020\Data_backup\CCInquery2017_2020\',FORMAT(GETDATE(),'yyyy-MM-dd-hh-mm-tt'),'.bak')
BACKUP DATABASE CCInquery2017_2020 TO DISK=@BackupName WITH COMPRESSION, INIT;
GO


DECLARE @BackupName VARCHAR(300)
SET @BackupName=CONCAT('D:\Backup\RequestClose2017_2020\',FORMAT(GETDATE(),'yyyy-MM-dd-hh-mm-tt'),'.bak')
BACKUP DATABASE CCInquery2017_2020 TO DISK=@BackupName WITH COMPRESSION, INIT;
GO



D:\2020\Data_backup\CCInquery2017_2020\

select * from test1

delete from test1 where Amount ='100'
Begin tran delete from Test1

Begin Tran 
DELETE FROM test1 
   WHERE Amount = '100'; 
ROLLBACK

use Demo

use CRMInquery
select * from INFORMATION_SCHEMA.Tables
use [RBI Audit Jan_Dec 2019]
select * from INFORMATION_SCHEMA.TABLES
select * from INFORMATION_SCHEMA.tables
use Consolidated_Complaint_RequestSummary19_20
use [RBI Audit Jan_Dec 2019]
select * from INFORMATION_SCHEMA.TABLES
select * from INFORMATION_SCHEMA.TABLES

exec sp_databases
use master
select * from INFORMATION_SCHEMA.TABLES
select * from spt_fallback_db
select * from spt_fallback_dev
select * from spt_monitor
exec sp_databases

use CRMInquery
select * from INFORMATION_SCHEMA.TABLES

use CCInquery2017_2020
select * from INFORMATION_SCHEMA.TABLES

use [RBI Audit Jan_Dec 2019]
drop database Consolidated_Complaint_RequestSummary19_20
select * from INFORMATION_SCHEMA.TABLES
select * from [Result RBI Audit Jan-Dec2019]

Use  CCInquery2017_2020
select * from ResultInquiry2017_2018

--combine May 2017
select * into ['2017_May$'] from(
	select * from ['2017_May1$'] union all
select * from ['2017_May2$'])z
drop table ['2017_May1$']
drop table ['2017_May$']
drop table ['2017_Nov$']
--close May 2017

drop table ['2017_oct$']

select * from ['2017_April$$']
  union all
select * from ['2018_March$'] 

drop table 2017

select * from[Nov_2017]union all
select * from ['2017_April$$'] union all
---------------------------------------
drop table Nov_2017$
select * from  ['2017_oct$'] union all
select * from ['2017_oct2$'] union all
-----------------------------------------
select * from ['2017_oct$'] union all
select * into [2017_sep] from(
select * from [sep1_2017$] union all
select * from [sep2_2017$])z
select * from [sep_17$]

select * from [2017_sep]
use RequestClose2017_2020
drop table RequestRecived2019

drop database CRMRequest

select * from ResultInquiry2019_2020 
select distinct t1.[Months_1],t1.ServiceRequest_Id,t1.CardEmbossed_Name,t1.Card_logo,t1.Location,t1.Origin,t1.Sub_Category,t1.Sub_Sub_Category,t1.Status_Code,t1.Assigned_To,t1.Created_On,t1.Internal_Duedate,t1.Due_date,t1.[Previous_StatusCode],t1.Creator_Department,t1.[Owner],t1.Last_ModifiedBy,t1.ServiceRequests_Type,t1.Reassigned_Reason,t1.Rejected_Reason,t1.Resolved_On,t1.Department_Assignedto,t1.ClosedWithin_OutsideTAT,t1.Closure_DateandTime,t1.Original_Creator,t1.[Source],t1.Created_date,t1.Closed_date,t1.Card_Category,t1.BFL_TAG
, ak.Closure_Comments,ak.Comments from 
(select * from ResultInquiry2019_2020) t1 left join
(select * from ResultCrm2019_2020)ak
on t1.ServiceRequest_Id=ak.ServiceRequest_Id where [Months_1]='April_19'

select Original_Creator, created_date from ResultInquiry2019_2020 
select * from ResultInquiry2019_2020 

select * into Temp from(
select * from ResultInquiry2019_2020 
)z
select * from Temp
update Temp set created_date = '2013-09-23 12:00:00.000'

SELECT  Title,  FirstName,  MiddleName,   LastName,  CONCAT(Title,' ',FirstName,' ',MiddleName,' ',LastName) as MailingName FROM Person.Person
select * from Temp
SELECT [Months_1],ServiceRequest_Id,CardEmbossed_Name,Card_logo,Location,Origin,Sub_Category,Sub_Sub_Category,Status_Code,Assigned_To,Created_On,Internal_Duedate,Due_date,[Previous_StatusCode],Creator_Department,[Owner],Last_ModifiedBy,ServiceRequests_Type,Reassigned_Reason,Rejected_Reason,Resolved_On,Department_Assignedto,ClosedWithin_OutsideTAT,Closure_DateandTime,Original_Creator,[Source],Created_date,Closed_date,Card_Category,BFL_TAG
SELECT ServiceRequest_Id,CardEmbossed_Name,Card_logo,Location,Origin,Sub_Category,Sub_Sub_Category,Status_Code,Assigned_To,Created_On,Internal_Duedate,Due_date,[Previous_StatusCode],Creator_Department,[Owner],Last_ModifiedBy,ServiceRequests_Type,Reassigned_Reason,Rejected_Reason,Resolved_On,Department_Assignedto,ClosedWithin_OutsideTAT,Closure_DateandTime,Original_Creator,[Source],Created_date,Closed_date,Card_Category,BFL_TAG,[Months_1], CONCAT(Original_Creator,' ',created_date) as Concatenat FROM Temp where Months_1='April_19'
--
SELECT ServiceRequest_Id,CardEmbossed_Name,Card_logo,Location,Origin,Sub_Category,Sub_Sub_Category,Status_Code,Assigned_To,Created_On,Internal_Duedate,Due_date,[Previous_StatusCode],Creator_Department,[Owner],Last_ModifiedBy,ServiceRequests_Type,Reassigned_Reason,Rejected_Reason,Resolved_On,Department_Assignedto,ClosedWithin_OutsideTAT,Closure_DateandTime,Original_Creator,[Source],Created_date,Closed_date,Card_Category,BFL_TAG,[Months_1], CONCAT(created_date,' ',Original_Creator) as Concatenat FROM Temp where Months_1='April_19'
select * from temp
SELECT FORMAT(GETDATE(), 'Y', 'en-US' ) AS 'created_date' FROM Temp where Months_1='May_19'
SELECT ServiceRequest_Id,CardEmbossed_Name,Card_logo,Location,Origin,Sub_Category,Sub_Sub_Category,Status_Code,Assigned_To,Created_On,Internal_Duedate,Due_date,[Previous_StatusCode],Creator_Department,[Owner],Last_ModifiedBy,ServiceRequests_Type,Reassigned_Reason,Rejected_Reason,Resolved_On,Department_Assignedto,ClosedWithin_OutsideTAT,Closure_DateandTime,Original_Creator,[Source],Created_date,Closed_date,Card_Category,BFL_TAG,[Months_1], CONCAT(Original_Creator,' ',created_date) as Concatenat FROM Temp where Months_1='April_19'
SELECT FORMAT(GETDATE(), 'Y', 'en-US' ) AS 'created_date' FROM Temp where Months_1='May_19'
ALTER COLUMN DATE1 AS (DD/MM/YYYY

ALTER TABLE ABC ALTER COLUMN DATE1 AS (DD/MM/YYYY)
alter table Temp ALTER COLUMN created_date(MM/YY)
SELECT CONVERT(date, getdate())created_date, Original_Creator, CONCAT(created_date,' ', Original_Creator) as Concatenat FROM TEMP WHeRE  Months_1='April_19'
SELECT CONVERT(created_date, getdate())
select substring([Closure Date],1,10) 
select * from CloseApril_2018$
SELECT SUBSTRING([original creator],[Closure Date], 1, 7) AS [original creator],[Closure Date] FROM CloseApril_2018$
SELECT SUBSTRING(CustomerName, 1, 5) AS ExtractString FROM Customers;
SELECT CONVERT(VARCHAR(10),[Closure Date],103) AS [Closure Date] FROM CloseApril_2018$(
Select * from CloseApril_2018$)

select distinct t1.[Months_1],t1.ServiceRequest_Id,t1.CardEmbossed_Name,t1.Card_logo,t1.Location,t1.Origin,t1.Sub_Category,t1.Sub_Sub_Category,t1.Status_Code,t1.Assigned_To,t1.Created_On,t1.Internal_Duedate,t1.Due_date,t1.[Previous_StatusCode],t1.Creator_Department,t1.[Owner],t1.Last_ModifiedBy,t1.ServiceRequests_Type,t1.Reassigned_Reason,t1.Rejected_Reason,t1.Resolved_On,t1.Department_Assignedto,t1.ClosedWithin_OutsideTAT,t1.Closure_DateandTime,t1.Original_Creator,t1.[Source],t1.Created_date,t1.Closed_date,t1.Card_Category,t1.BFL_TAG
, ak.Closure_Comments,ak.Comments from 
(select * from ResultInquiry2017_2018) t1 left join
(select * from ResultCrm2017_2018)ak
on t1.ServiceRequest_Id=ak.ServiceRequest_Id where [Months_1]='June_17'
use RequestClose

Select * from RequestClose.INFORMATION_SCHEMA.COLUMNS
Describe table tableMay_2019Received$
exec sp_databases
select * from INFORMATION_SCHEMA.COLUMNS

select COUNT [Concatenat] 

select (select count(*)from ['Jan-2019$'])as [Jan-2019],(select count(*)from ['Feb-2019$'])as [Feb-2019]
,(select count(*)from ['Mar-2019$'] )as [Mar-2019],(select count(*)from ['April-2019$'] )as [April-2019]
,(select count(*)from ['May-2019$'] )as [May-2019],(select count(*)from ['Jun-2019$'] )as [Jun-2019]
,(select count(*)from ['July-2019$'] )as [July-2019],(select count(*)from ['Aug-2019$'] )as [Aug-2019]
,(select count(*)from ['Sep-2019$'] )as [Sep-2019],(select count(*)from['Oct-2019$'])as [Oct-2019]
,(select count(*)from ['Nov-2019$'] )as [Nov-2019],(select count(*)from['Dec-2019$'])as [Dec-2019]
<!--Query End-->

use CloseRequest

use close19_20
select * from Apr_19$

SELECT COUNT(column_name)
FROM table_name
WHERE condition;


select temp,count(temp) As 'Total Volume' from
(select distinct ak.Month_1,t1.[Service Request Id],ak.[Sub Sub Category] as temp,
ak.[Within/Beyond TAT],ak.[FTR/FTNR]
from 
(select * from RequestClosed2019) t1 left join
(select * from closedRequest19_20)ak
on t1.[Service Request Id]=ak.[Service Request Id] where Month_1 = 'Apr_19'  group by [Sub Sub Category])


select (select count(*)from ['Jan-2019$'])as [Jan-2019],(select count(*)from ['Feb-2019$'])as [Feb-2019]

select [Sub Sub Category], count([Sub Sub Category]) As 'Total Volume' group by [Sub Sub Category]
select [Sub Sub Category], count([Sub Sub Category]) As 'Total Volume'
from closedRequest19_20 group by [Sub Sub Category])


 SELECT COUNT(*), A, B, C, D FROM dbo.YourTable  GROUP BY A, B, C, D
 -- optional - if you want to skip all the rows that occur only once
 -- HAVING COUNT(*) > 1 

  SELECT COUNT(*), A, B, C, D FROM dbo.YourTable  GROUP BY A, B, C, D

select [Sub Sub Category], count([Sub Sub Category]) As 'Total Volume' from closedRequest19_20 group by [Sub Sub Category]

select distinct COUNT (*) as [Total Voulme],[Month_1],[Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR]  from closedRequest19_20 group by [Month_1],[Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR] HAVING COUNT(*) > 1 order by [Sub Sub Category]
select * from RequestclosedFY19_20

 
 SELECT column_name(s)FROM table1 LEFT JOIN table2 ON table1.column_name = table2.column_name;

 
 select * from ['Beyond TAT$'] left join 
 select * from  ['Within TAT$']
 select Month_1,[Service Requests Type],[Sub Sub Category], Count([Beyond TAT]) As [Beyond TAT], count(FTNR) as FTNR from ['Beyond TAT$'] GROUP BY  Month_1,[Service Requests Type],[Sub Sub Category]


 select * into RequestclosedFY19_20 from(
select distinct ak.Month_1,t1.[Service Request Id],
t1.[Card Embossed Name],t1.Location,
t1.Origin,t1.[Sub Category],
t1.[Status Code],t1.[Assigned To],t1.[Created On],
t1.[Internal Due date],t1.[Due date],
t1.[Previous Status Code],
t1.[Creator Department],t1.[Owner],
t1.[Last Modified By],
t1.[Reassigned Reason],t1.[Rejected Reason],
t1.[Resolved On],t1.[Department Assigned to],
t1.[Closure Date and Time],
t1.[Source],t1.[customer TAT],
ak.[Service Requests Type],ak.[Sub Sub Category],ak.[Open date],ak.[Closure Date],ak.[System TAT],ak.[Working days],ak.[Overdue days],ak.[Within/Beyond TAT],ak.[Card Type1],ak.[BFL/RBL],ak.RCA,ak.[FTR/FTNR],ak.[Staff/Insignia],ak.CRI_VOC,ak.[RBI_BO/ SME],ak.[FTNR Reason],ak.[Complaint categorization],ak.[Fulfillment Unit]
from 
(select * from RequestClosed2019) t1 left join
(select * from closedRequest19_20)ak
on t1.[Service Request Id]=ak.[Service Request Id])z

 SELECT column_name(s)FROM table1 LEFT JOIN table2 ON table1.column_name = table2.column_name;

 select ak.Month_1,ak.[Service Requests Type],ak.[Sub Sub Category],t1.[Service Requests Type],count (t1.[Sub Sub Category]) from (select * from ['Beyond TAT$'])ak left join 
 (select * from ['Within TAT$'])t1
 on ak.Month_1=t1.Month_1 Group by ak.Month_1,ak.[Service Requests Type],ak.[Sub Sub Category],t1.[Service Requests Type],t1.[Sub Sub Category]



 --t1.['Within TAT$'] on ak.['Beyond TAT$'].Month_1 = t1.['Within TAT$'].Month_1



 



group by ak.[Sub Sub Category]
--close
count(ak.[Sub Sub Category]) As 'Total Volume',

(select count (ak.[Sub Sub Category])) As 'Total Volume'
select distinct ak.Month_1,t1.[Service Request Id],ak.[Sub Sub Category],
ak.[Within/Beyond TAT],ak.[FTR/FTNR]
from 
(select * from RequestClosed2019) t1 left join
(select * from closedRequest19_20)ak
on t1.[Service Request Id]=ak.[Service Request Id] where ak.Month_1 = 'Apr_19') group by ak.[Sub Sub Category]



select Month_1, [Sub Sub Category], count([Service Request Id]) As 'Total Volume' from closedRequest19_20 group by [Sub Sub Category]
(select Count ak.[Sub Sub Category] As 'Total Volume'),

select * from closedRequest19_20

(select [Sub Sub Category], count([Sub Sub Category]) As 'Total Volume' from closedRequest19_20 group by [Sub Sub Category]) t2
count([Sub Sub Category]) As 'Total Volume')

--{
--where 
--ak.[Within/Beyond TAT]='Within TAT'
--ak.[Within/Beyond TAT]='Beyond Tat'
--ak.Month_1='Apr_19' and ak.[Sub Sub Category]='Late Fee'
--}
SELECT COUNT([Sub Sub Category])
FROM ClosedRequest19_20
WHERE [Sub Sub Category]='Request for duplicate statement'


 SELECT COUNT(*), A, B, C, D FROM dbo.YourTable GROUP BY A, B, C, D -- optional - if you want to skip all the rows that occur only once -- HAVING COUNT(*) > 1 
select(select COUNT(*) [Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR] from closedRequest19_20 group by [Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR]

select [Month_1],[Sub Sub Category],[Service Requests Type],[Within/Beyond TAT],[FTR/FTNR] from RequestclosedFY19_20 where [Month_1]='Apr_19'

use close19_20
select * from data 
select [Sub Sub Category],count(*)[Within/Beyond TAT],[FTR/FTNR] from closedRequest19_20 group by [Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR]



select [Month_1],[Sub Sub Category], Count([Within/Beyond TAT]) as [Within TAT],Count([Within/Beyond TAT]) as [Beyond TAT],Count([FTR/FTNR]) as [FTR],count([FTR/FTNR]) as [FTNR] from RequestclosedFY19_20 
where [Within/Beyond TAT] in ('Within TAT','Beyond TAT','FTR','FTNR')  group by [Month_1],[Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR] 



select [Month_1],[Sub Sub Category], Count([Within/Beyond TAT]) as [Within TAT] substring('Within'),Count([Within/Beyond TAT]) as [Beyond TAT],Count([FTR/FTNR]) as [FTR],count([FTR/FTNR]) as [FTNR] from RequestclosedFY19_20 
where [Within/Beyond TAT] in ('Within TAT','Beyond TAT','FTR','FTNR')  group by [Month_1],[Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR] 



select distinct [Month_1],[Service Requests Type],[Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR] from RequestclosedFY19_20 where [Within/Beyond TAT] =('Within TAT') and [FTR/FTNR]='FTR'
GROUP BY [Month_1],[Service Requests Type],[Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR] 


select distinct [Month_1],[Service Requests Type],[Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR] from RequestclosedFY19_20 where [Within/Beyond TAT] ='Beyond TAT' and [FTR/FTNR]='FTNR'
GROUP BY [Month_1],[Service Requests Type],[Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR]

use RecivedClose2017_2020
select * from INFORMATION_SCHEMA.TABLES
exec sp_databases
select * from RequestclosedFY19_20

select * from RequestclosedFY19_20
select * from closedRequest19_20
select  distinct [Sub Sub Category],[Service Requests Type],count([Service Requests Type]) as [Service Requests Type], [Within/Beyond TAT],count([Within/Beyond TAT])as [Within/Beyond TAT], [FTR/FTNR], COUNT([FTR/FTNR]) AS  [FTR/FTNR] from RequestclosedFY19_20 group by [Sub Sub Category], [Service Requests Type],[Within/Beyond TAT],[FTR/FTNR]


select  distinct [Sub Sub Category],count([Service Requests Type]) as [Service Requests Type], [Within/Beyond TAT],count([Within/Beyond TAT])as [Within/Beyond TAT], [FTR/FTNR], COUNT([FTR/FTNR]) AS  [FTR/FTNR] from RequestclosedFY19_20 group by [Sub Sub Category], [Service Requests Type],[Within/Beyond TAT],[FTR/FTNR]

select * into TT from (
select  distinct [Sub Sub Category] from RequestclosedFY19_20)z
 SELECT COUNT(*), A, B, C, D  FROM dbo.YourTable  GROUP BY A, B, C, D
 -- optional - if you want to skip all the rows that occur only once
 -- HAVING COUNT(*) > 1 
select Month_1,[Service Request Id],[Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR], COUNT([Sub Sub Category]) As 'Total Volume' from RequestclosedFY19_20 group by [Sub Sub Category]


select Month_1,[Service Request Id],[Sub Sub Category],[Within/Beyond TAT],[FTR/FTNR] from RequestclosedFY19_20 where Month_1='Apr_19'

select[Sub Sub Category], count([Sub Sub Category]) As 'Total Volume' from closedRequest19_20 group by [Sub Sub Category]

Select [Month_1], [Sub Sub Category], [Service Requests Type], COUNT([Service Request Id]) as 'Total Volume'   from RequestclosedFY19_20 group by Month_1

select
Select [Month_1], [Service Requests Type],[Sub Sub Category],  from RequestclosedFY19_20 

where ak.Month_1='Apr_19'
--close
select [Sub Sub Category], count([Sub Sub Category]) As 'Total Volume' from closedRequest19_20 group by [Sub Sub Category]
select [Sub Sub Category], [Within/Beyond TAT] count([Sub Sub Category],[Within/Beyond TAT]) As 'Within TAT' from closedRequest19_20 where Month_1='Apr_19'  group by [Within/Beyond TAT],[Within/Beyond TAT]


 select [Sub Sub Category], count([Sub Sub Category]) As 'Total Volume' from closedRequest19_20 group by [Sub Sub Category] where ='Preclosure of Transfer N Pay (BT on EMI)'


select [Within/Beyond TAT], count([Within/Beyond TAT]) As 'Within TAT' from closedRequest19_20 where Month_1='Apr_19'  group by [Within/Beyond TAT] 

select [FTR/FTNR], count([FTR/FTNR]) As 'FTR' from closedRequest19_20 where Month_1='Apr_19'  group by [FTR/FTNR] 

select * from RequestclosedFY19_20 where [FTR/FTNR]= 'Within TAT'


C:\Users\C15739\Desktop\Temp








SELECT * INTO EXCEL_IMPORT
FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0',
'Excel 12.0; Database=C:\Excel\Spreadsheet.xls; HDR=YES; IMEX=1',
'SELECT * FROM [Sheet1$]');

create database Test
select * into T1 from Openrowset('Microsoft.ACE.OLEDB.12.0',
'Excel 12.0; Database=C:\Users\C15739\Desktop\Temp\TAT1.xlsx; HDR=YES; IMEX=1',
'SELECT * FROM [T1$]'
)





SELECT CompanyCode, AgentId
FROM UniqueAgentIdToUniqueAgentId un
WHERE un.UniqueAgentId = 
      (SELECT UniqueAgentId 
       FROM (SELECT q.LastChangeDate, a.UniqueAgentId 
             FROM QueueUpdates q, AgentProductTraining a 
             WHERE a.LastChangeDate >= q.LastChangeDate
            ) t
      )

	  use RecivedClose2017_2020

select distinct [Sub Sub Category], count ([Sub Sub Category]) as [Sub Sub Category], 
[Service Requests Type], count([Service Requests Type]) AS [Service Requests Type]
 from RequestclosedFY19_20 group by [Sub Sub Category],[Service Requests Type]

 select distinct [Within/Beyond TAT],count([Within/Beyond TAT]) as [Within/Beyond TAT],
 [FTR/FTNR],count([FTR/FTNR]) as [FTR/FTNR]
  from RequestclosedFY19_20 group by [Within/Beyond TAT],[FTR/FTNR]


  Use CloseRequest
--2018 recive
select * into RequestClosed2018 from (
drop table [January_2019Received$] 
drop table[Feburary_2019Received$] 
 drop table [March_2019Recived$] 
 drop table [April_2018Received$]
 drop table [May_2018Received$]
 drop table [June_2018Received$] 
 drop table [July_2018Received$]
 drop table [August_2018Received$] 
 drop table [September_2018Received$]
 drop table [October_2018Received$] 
 drop table [November_2018Received$]
drop table [December_2018Received$]

drop table RequestClosed2018
select * from ClosedRequest2018
-------------------------------------------
--2018 close
select * into ClosedRequest2018 from (
drop table closeJanuary_2019$
drop table closeFeb_2019$
drop table closeMarch_2019$ 
drop table CloseApril_2018$
drop table CloseMay_2018$
drop table CloseJune_2018$
drop table CloseJuly_2018$
drop table CloseAugust_2018$
drop table CloseSeptember_2018$
drop table CloseOctober_2018$ 
drop table CloseNovember_2018$ 
drop table CloseDecember_2018$

drop table ClosedRequest2018
